# test_example.py


# Тестируемый код
# ---------->

def one_more(x):
    return x + 1

# # Вот теперь ясно: автор функции забыл про сортировку.
# def get_sort_list(string):
#     new_list = string.split(',')
#     return new_list

# Исправим функцию get_sort_list(): отсортируем список.
def get_sort_list(string):
    # Сортировка и пробел после запятой в аргументе.
    new_list = sorted(string.split(', '))  
    return new_list




# Тесты
# ---------->

def test_correct():
    assert one_more(4) == 5


def test_fail():
    assert one_more(3) == 5


# Опечатка автора теста в именах Миша/Маша
# def test_sort():
#     """Тестируем функцию get_sort_list()."""
#     result = get_sort_list('Яша, Саша, Маша, Даша')
#     assert result == ['Даша', 'Миша', 'Саша', 'Яша']


def test_sort():
    """Тестируем функцию get_sort_list()."""
    result = get_sort_list('Яша, Саша, Маша, Даша')
    assert result  == ['Даша', 'Маша', 'Саша', 'Яша']  # 'Маша', а не 'Миша'.


def test_type():
    """Тестируем тип данных, возвращаемых из get_sort_list()."""
    result = get_sort_list('Яша, Саша, Маша, Даша')
    # Провальный тест:
    # ожидаем число, но вернётся список.
    assert isinstance(result, int)




# Список команд терминала
# ---------->

# pytest test_example.py -qq --lf

# --lf (--last-failed)
# будут выполнены только те тесты, которые провалились в прошлый раз

# --ff (--failed-first)
# сначала будут выполнены провалившиеся тесты, а после них — все остальные

# --nf (--new-first)
# «старые» тесты будут выполняться в порядке «сначала новые, потом старые»,
# в зависимости от даты модификации файлов с тестами

# -x (--exitfirst)
# Тестирование в режиме «до первого упавшего теста»

# --maxfail=N (--maxfail=3)
# Выполнение тестов можно останавливать не только после первого падения,
# но и после провала любого другого количества тестов.
# Количество можно указать в ключе

# --sw (--stepwise)
# Пошаговое выполнение тестов, при котором можно «фиксить» проблемы по очереди
# у режима stepwise есть полезная особенность: если не удаётся решить
# проблему с каким-то падающим тестом — его можно пропустить и перейти к следующему.
# Делается это при помощи ключа --stepwise-skip
